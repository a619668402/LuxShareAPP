onClick和onTouch执行的优先级:
给一个按钮添加onClick和onTouch事件,onTouch优先于onClick执行,在onTouch事件里面可以做的事情比onClick要多一些,比如判断手指按下,抬起,移动等.

onTouch事件有返回值,默认返回的是false,如果把返回值改为true,onClick方法就不执行.

注意:如果onTouch方法返回true就认为这个事件被onTouch消费掉,不会继续往下传递.

重点:
当我们触摸任何一个控件,都会调用该控件的dispatchTouchEvent方法.
public boolean dispatchTouchEvent(MotionEvent event) {
    if (mOnTouchListener != null && (mViewFlags & ENABLED_MASK) == ENABLED && mOnTouchListener.onTouch(this, event)) {
        return true;
    }
    return onTouchEvent(event);
}
三个条件都为真,就返回true,否则就执行onTouchEvent(event)方法并返回.
第一个条件:mOnTouchListener正是在setOnTouchListener方法里赋值的,也就是说主要我们给控件注册了touch事件,mOnTouchListener就一定被赋值了.
第二个条件:(mViewFlags&ENABLED_MASK)==ENABLED是判断当前点击的控件是否是enable的,按钮默认都是enable的,因此这个条件恒定为true.
第三个条件,mOnTouchListener.onTouch(this,event),其实也就是回调注册控件touch事件时的onTouch方法,也就是说如果我们在onTouch方法返回true,就会让这三个条件全部成立,从而整个方法直接返回true,如果我们在onTouch方法里面返回false,就去执行onTouchEvent(event)方法.


注意:Touch事件的层级传递,我们给一个控件注册了touch事件,每次点击它的时候都会触发一系列的ACTION_DOWN,ACTION_UP,ACTION_MOVE等事件.
如果再执行ACTION_DOWN的时候返回false,后面的一系列其它的action就不会再得到执行了.简单说就是dispatch'TouchEvent在进行事件分发的时候,只有前一个action返回true,才会触发后一个action.在一点在源码里面可以看到.
public boolean onTouchEvent(MotionEvent event)  {
	if (((viewFlags & CLICKABLE) == CLICKABLE ||  (viewFlags & LONG_CLICKABLE) == LONG_CLICKABLE)) {
		switch (event.getAction()) {
			case MotionEvent.ACTION_DOWN:
				break;
			case MotionEvent.ACTION_UP:
				break;
			case MotionEvent.ACTION_MOVE:
				break;
		}
		return true;
	}
	return false;
}
在onTouch事件返回false,就会进入onTouchEvent事件,在onTouchEvent事件里面有一个判断if (((viewFlags & CLICKABLE) == CLICKABLE ||  (viewFlags & LONG_CLICKABLE),如果控件是可点击的就会进入判断,返回true,否则就返回false,导致后面的action不在执行.给控件设置setOnClickListener事件时默认使控件变得可点击了.也就是让view.setClickable(true),会使if判断为true.


onTouch和onTouchEvent区别:
两个方法都是在View的dispatchTouchEvent中调用,onTouch优先于onTouchEvent执行.如果onTouch方法返回true就会将事件消费掉,onTouchEvent将不再执行.
onTouch执行需要两个前提条件.第一mOntouchListener的值不能为空,第二点击的控件是可见的.因此如果有一个控件是非enable的,那么给它注册onTouch事件将永远得不到执行,对于这一类控件,想要监听它的touch事件,就必须在该控件中重写onTouchEvent方法实现.



总结:
1.对于一个不可点击的控件,设置了onTouchListener监听,在onTouch事件里面如果返回了false,那么执行完MotionEvent.ACTION_DOWN动作之后,后面的action将不再执行.如果返回了true,那么后面action可以继续执行.
2.对于一个不可点击的控件,如果设置可点击属性为true,那么onTouch事件无论返回true或者false,ACTION_DOWN,ACTION_MOVE,ACTION_UP都会依次执行.

































